server.port=8080
spring.h2.console.enabled=true
#spring.datasource.generate-unique-name=false
#spring.h2.console.view=/h2-console
#spring.datasource.url=jdbc:h2:mem:testdb
#spring.datasource.driverClassName=org.h2.Driver
#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
#spring.h2.console.settings.trace=false
#spring.h2.console.settings.web-allow-others=false

#Stored the values in environment variable
#spring.datasource.url=${JDBC_DATABASE_URL}
spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USER}
spring.datasource.password=${DB_PASS}
#Another way to encrypt password
#spring.datasource.password=ENC(dTbA3RZ3U1/RJPUcVcJIdkxmopJI1RZP)
#jasypt.encryptor.password=moneymanagement

spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
### had to add this because of the .hibernate_sequence doesn't exist errors!
spring.jpa.hibernate.use-new-id-generator-mappings= false

#set to 'none' to .ddl-auto if you want to create mysql tables from "schema.sql" files instead of from entities
spring.jpa.hibernate.ddl-auto = create-drop
spring.jpa.generate-ddl=true
spring.jpa.show-sql=true
#tells hibernate where to find initial data to import into mysql if .ddl-auto method is used
spring.jpa.properties.hibernate.hbm2ddl.import_files= classpath:db/import.sql
#below is needed for JPA to read SQL language from import.sql
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
#spring.jpa.hibernate.naming_strategy = org.hibernate.cfg.ImprovedNamingStrategy

#set to 'always' if you want to create mysql tables from "schema.sql" file instead of from entities
spring.datasource.initialization-mode=never

#tells hibernate where to find the data and schema file
#spring.datasource.data= classpath:db/data.sql
#spring.datasource.schema = classpath:db/schema.sql

#Need this for testing to work properly
spring.main.allow-bean-definition-overriding=true


#jdbc:mysql://localhost:3306/moneymanagement
#jdbc:mysql://mysql-moneymanagement.cvq8xhrssade.us-east-2.rds.amazonaws.com/moneymanagement

